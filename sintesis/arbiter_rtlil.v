/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "modules/arbiter/arbiter.v:1" *)
module arbiter(clk, rst, enb, empty_vchannel0, empty_vchannel1, empty_vchannel2, empty_vchannel3, arbiter_input, valid_channel, rndrobin_input);
  (* src = "modules/arbiter/arbiter.v:41" *)
  wire [1:0] _00_;
  (* src = "modules/arbiter/arbiter.v:41" *)
  wire [3:0] _01_;
  wire _02_;
  wire [1:0] _03_;
  wire _04_;
  wire [1:0] _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  (* src = "modules/arbiter/arbiter.v:45" *)
  wire _13_;
  (* src = "modules/arbiter/arbiter.v:46" *)
  wire _14_;
  (* src = "modules/arbiter/arbiter.v:47" *)
  wire _15_;
  (* src = "modules/arbiter/arbiter.v:48" *)
  wire _16_;
  (* src = "modules/arbiter/arbiter.v:22" *)
  input [1:0] arbiter_input;
  (* src = "modules/arbiter/arbiter.v:15" *)
  input clk;
  (* src = "modules/arbiter/arbiter.v:18" *)
  input empty_vchannel0;
  (* src = "modules/arbiter/arbiter.v:19" *)
  input empty_vchannel1;
  (* src = "modules/arbiter/arbiter.v:20" *)
  input empty_vchannel2;
  (* src = "modules/arbiter/arbiter.v:21" *)
  input empty_vchannel3;
  (* src = "modules/arbiter/arbiter.v:17" *)
  input enb;
  (* init = 2'b00 *)
  (* src = "modules/arbiter/arbiter.v:24" *)
  output [1:0] rndrobin_input;
  reg [1:0] rndrobin_input;
  initial rndrobin_input = 2'b00;
  (* src = "modules/arbiter/arbiter.v:16" *)
  input rst;
  (* init = 4'b0000 *)
  (* src = "modules/arbiter/arbiter.v:23" *)
  output [3:0] valid_channel;
  reg [3:0] valid_channel;
  initial valid_channel = 4'b0000;
  assign _03_[0] = _12_ | _11_;
  assign _03_[1] = _10_ | _09_;
  assign _02_ = _03_[0] | _03_[1];
  assign _06_ = _05_[0] |(* src = "modules/arbiter/arbiter.v:42" *)  _05_[1];
  assign _07_ = arbiter_input[0] |(* src = "modules/arbiter/arbiter.v:42" *)  _05_[1];
  assign _08_ = _05_[0] |(* src = "modules/arbiter/arbiter.v:42" *)  arbiter_input[1];
  assign _04_ = arbiter_input[0] |(* src = "modules/arbiter/arbiter.v:42" *)  arbiter_input[1];
  assign _09_ = ~(* src = "modules/arbiter/arbiter.v:42" *) _06_;
  assign _10_ = ~(* src = "modules/arbiter/arbiter.v:42" *) _07_;
  assign _11_ = ~(* src = "modules/arbiter/arbiter.v:42" *) _08_;
  assign _12_ = ~(* src = "modules/arbiter/arbiter.v:42" *) _04_;
  assign _16_ = ~(* src = "modules/arbiter/arbiter.v:62" *) empty_vchannel3;
  assign _13_ = ~(* src = "modules/arbiter/arbiter.v:67" *) empty_vchannel0;
  assign _14_ = ~(* src = "modules/arbiter/arbiter.v:68" *) empty_vchannel1;
  assign _15_ = ~(* src = "modules/arbiter/arbiter.v:69" *) empty_vchannel2;
  assign _01_[3] = _02_ ? (* src = "modules/arbiter/arbiter.v:42" *) _16_ : 1'bx;
  assign _01_[2] = _02_ ? (* src = "modules/arbiter/arbiter.v:42" *) _15_ : 1'bx;
  assign _01_[1] = _02_ ? (* src = "modules/arbiter/arbiter.v:42" *) _14_ : 1'bx;
  assign _01_[0] = _02_ ? (* src = "modules/arbiter/arbiter.v:42" *) _13_ : 1'bx;
  assign _00_[0] = _02_ ? (* src = "modules/arbiter/arbiter.v:42" *) arbiter_input[0] : rndrobin_input[0];
  assign _00_[1] = _02_ ? (* src = "modules/arbiter/arbiter.v:42" *) arbiter_input[1] : rndrobin_input[1];
  (* src = "modules/arbiter/arbiter.v:41" *)
  always @(posedge clk)
      valid_channel[0] <= _01_[0];
  (* src = "modules/arbiter/arbiter.v:41" *)
  always @(posedge clk)
      valid_channel[1] <= _01_[1];
  (* src = "modules/arbiter/arbiter.v:41" *)
  always @(posedge clk)
      valid_channel[2] <= _01_[2];
  (* src = "modules/arbiter/arbiter.v:41" *)
  always @(posedge clk)
      valid_channel[3] <= _01_[3];
  (* src = "modules/arbiter/arbiter.v:41" *)
  always @(posedge clk)
      rndrobin_input[0] <= _00_[0];
  (* src = "modules/arbiter/arbiter.v:41" *)
  always @(posedge clk)
      rndrobin_input[1] <= _00_[1];
  assign _05_[1] = arbiter_input[1] ^(* src = "modules/arbiter/arbiter.v:42" *)  1'b1;
  assign _05_[0] = arbiter_input[0] ^(* src = "modules/arbiter/arbiter.v:42" *)  1'b1;
endmodule
