/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.2.0-11ubuntu1 -O2 -fdebug-prefix-map=/build/yosys-OIL3SR/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "fifo.v:2" *)
module fifo(clk, rst, wr_en, rd_en, almostEmpty, almostFull, DataIn, DataOut, fifo_counter);
  (* src = "fifo.v:57" *)
  wire [3:0] _000_;
  (* src = "fifo.v:57" *)
  wire [3:0] _001_;
  (* src = "fifo.v:42" *)
  wire [3:0] _002_;
  (* src = "fifo.v:25" *)
  wire [3:0] _003_;
  (* src = "fifo.v:67" *)
  wire [2:0] _004_;
  (* src = "fifo.v:67" *)
  wire [2:0] _005_;
  (* src = "fifo.v:34" *)
  wire [31:0] _006_;
  (* src = "fifo.v:76" *)
  wire [31:0] _007_;
  (* src = "fifo.v:79" *)
  wire [31:0] _008_;
  wire [3:0] _009_;
  wire [3:0] _010_;
  wire [3:0] _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire [3:0] _024_;
  wire [3:0] _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire [15:0] _029_;
  wire [7:0] _030_;
  wire [15:0] _031_;
  wire [7:0] _032_;
  (* src = "fifo.v:30" *)
  wire _033_;
  (* src = "fifo.v:30" *)
  wire _034_;
  (* src = "fifo.v:30" *)
  wire _035_;
  (* src = "fifo.v:30" *)
  wire _036_;
  wire [3:0] _037_;
  wire [3:0] _038_;
  wire [3:0] _039_;
  wire [3:0] _040_;
  wire [3:0] _041_;
  wire [3:0] _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire [3:0] _051_;
  wire [3:0] _052_;
  wire [3:0] _053_;
  wire [3:0] _054_;
  wire [3:0] _055_;
  wire [3:0] _056_;
  wire [3:0] _057_;
  wire [3:0] _058_;
  (* src = "fifo.v:49" *)
  wire [3:0] _059_;
  wire [3:0] _060_;
  wire [3:0] _061_;
  (* src = "fifo.v:37" *)
  wire [31:0] _062_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _063_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _064_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _065_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _066_;
  wire [31:0] _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _071_;
  wire [31:0] _072_;
  wire _073_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _074_;
  wire [31:0] _075_;
  (* src = "<techmap.v>:260|<techmap.v>:221" *)
  wire _076_;
  (* src = "<techmap.v>:260|<techmap.v>:221" *)
  wire _077_;
  (* src = "<techmap.v>:260|<techmap.v>:221" *)
  wire _078_;
  (* src = "<techmap.v>:260|<techmap.v>:221" *)
  wire _079_;
  (* src = "<techmap.v>:260|<techmap.v>:229" *)
  wire _080_;
  (* src = "fifo.v:9" *)
  input [3:0] DataIn;
  (* src = "fifo.v:10" *)
  output [3:0] DataOut;
  reg [3:0] DataOut;
  (* src = "fifo.v:7" *)
  output almostEmpty;
  (* src = "fifo.v:8" *)
  output almostFull;
  (* src = "fifo.v:3" *)
  input clk;
  (* src = "fifo.v:11" *)
  output [3:0] fifo_counter;
  reg [3:0] fifo_counter;
  reg [3:0] \ram[0] ;
  reg [3:0] \ram[1] ;
  reg [3:0] \ram[2] ;
  reg [3:0] \ram[3] ;
  reg [3:0] \ram[4] ;
  reg [3:0] \ram[5] ;
  reg [3:0] \ram[6] ;
  reg [3:0] \ram[7] ;
  (* src = "fifo.v:6" *)
  input rd_en;
  (* src = "fifo.v:16" *)
  reg [2:0] rd_ptr;
  (* src = "fifo.v:4" *)
  input rst;
  (* src = "fifo.v:5" *)
  input wr_en;
  (* src = "fifo.v:17" *)
  reg [2:0] wr_ptr;
  assign _030_[0] = _029_[0] & _029_[1];
  assign almostEmpty = _073_ | _030_[0];
  assign _029_[0] = _006_[0] & fifo_counter[1];
  assign _031_[1] = fifo_counter[2] & _067_[3];
  assign _032_[0] = _029_[0] & _031_[1];
  assign almostFull = _069_ | _032_[0];
  assign _035_ = ~(* src = "fifo.v:76" *) almostFull;
  assign _036_ = ~(* src = "fifo.v:79" *) almostEmpty;
  assign _034_ = _001_[3] &(* src = "fifo.v:30" *)  _033_;
  assign _001_[3] = _035_ &(* src = "fifo.v:76" *)  wr_en;
  assign _033_ = _036_ &(* src = "fifo.v:79" *)  rd_en;
  assign _039_[0] = rd_ptr[0] ? \ram[1] [0] : \ram[0] [0];
  assign _039_[1] = rd_ptr[0] ? \ram[1] [1] : \ram[0] [1];
  assign _039_[2] = rd_ptr[0] ? \ram[1] [2] : \ram[0] [2];
  assign _039_[3] = rd_ptr[0] ? \ram[1] [3] : \ram[0] [3];
  assign _037_[0] = rd_ptr[1] ? _040_[0] : _039_[0];
  assign _037_[1] = rd_ptr[1] ? _040_[1] : _039_[1];
  assign _037_[2] = rd_ptr[1] ? _040_[2] : _039_[2];
  assign _037_[3] = rd_ptr[1] ? _040_[3] : _039_[3];
  assign _038_[0] = rd_ptr[1] ? _042_[0] : _041_[0];
  assign _038_[1] = rd_ptr[1] ? _042_[1] : _041_[1];
  assign _038_[2] = rd_ptr[1] ? _042_[2] : _041_[2];
  assign _038_[3] = rd_ptr[1] ? _042_[3] : _041_[3];
  assign _059_[0] = rd_ptr[2] ? _038_[0] : _037_[0];
  assign _059_[1] = rd_ptr[2] ? _038_[1] : _037_[1];
  assign _059_[2] = rd_ptr[2] ? _038_[2] : _037_[2];
  assign _059_[3] = rd_ptr[2] ? _038_[3] : _037_[3];
  assign _040_[0] = rd_ptr[0] ? \ram[3] [0] : \ram[2] [0];
  assign _040_[1] = rd_ptr[0] ? \ram[3] [1] : \ram[2] [1];
  assign _040_[2] = rd_ptr[0] ? \ram[3] [2] : \ram[2] [2];
  assign _040_[3] = rd_ptr[0] ? \ram[3] [3] : \ram[2] [3];
  assign _005_[0] = _001_[3] ? (* src = "fifo.v:76" *) _007_[0] : wr_ptr[0];
  assign _005_[1] = _001_[3] ? (* src = "fifo.v:76" *) _007_[1] : wr_ptr[1];
  assign _005_[2] = _001_[3] ? (* src = "fifo.v:76" *) _007_[2] : wr_ptr[2];
  assign _004_[0] = _033_ ? (* src = "fifo.v:79" *) _008_[0] : rd_ptr[0];
  assign _004_[1] = _033_ ? (* src = "fifo.v:79" *) _008_[1] : rd_ptr[1];
  assign _004_[2] = _033_ ? (* src = "fifo.v:79" *) _008_[2] : rd_ptr[2];
  assign _000_[0] = _001_[3] ? (* src = "fifo.v:60" *) DataIn[0] : 1'bx;
  assign _000_[1] = _001_[3] ? (* src = "fifo.v:60" *) DataIn[1] : 1'bx;
  assign _000_[2] = _001_[3] ? (* src = "fifo.v:60" *) DataIn[2] : 1'bx;
  assign _000_[3] = _001_[3] ? (* src = "fifo.v:60" *) DataIn[3] : 1'bx;
  assign _002_[0] = _033_ ? (* src = "fifo.v:48" *) _059_[0] : DataOut[0];
  assign _002_[1] = _033_ ? (* src = "fifo.v:48" *) _059_[1] : DataOut[1];
  assign _002_[2] = _033_ ? (* src = "fifo.v:48" *) _059_[2] : DataOut[2];
  assign _002_[3] = _033_ ? (* src = "fifo.v:48" *) _059_[3] : DataOut[3];
  assign _060_[0] = _033_ ? (* src = "fifo.v:36" *) _006_[0] : fifo_counter[0];
  assign _060_[1] = _033_ ? (* src = "fifo.v:36" *) _062_[1] : fifo_counter[1];
  assign _060_[2] = _033_ ? (* src = "fifo.v:36" *) _062_[2] : fifo_counter[2];
  assign _060_[3] = _033_ ? (* src = "fifo.v:36" *) _062_[3] : fifo_counter[3];
  assign _061_[0] = _001_[3] ? (* src = "fifo.v:33" *) _006_[0] : _060_[0];
  assign _061_[1] = _001_[3] ? (* src = "fifo.v:33" *) _006_[1] : _060_[1];
  assign _061_[2] = _001_[3] ? (* src = "fifo.v:33" *) _006_[2] : _060_[2];
  assign _061_[3] = _001_[3] ? (* src = "fifo.v:33" *) _006_[3] : _060_[3];
  assign _003_[0] = _034_ ? (* src = "fifo.v:30" *) fifo_counter[0] : _061_[0];
  assign _003_[1] = _034_ ? (* src = "fifo.v:30" *) fifo_counter[1] : _061_[1];
  assign _003_[2] = _034_ ? (* src = "fifo.v:30" *) fifo_counter[2] : _061_[2];
  assign _003_[3] = _034_ ? (* src = "fifo.v:30" *) fifo_counter[3] : _061_[3];
  assign _041_[0] = rd_ptr[0] ? \ram[5] [0] : \ram[4] [0];
  assign _041_[1] = rd_ptr[0] ? \ram[5] [1] : \ram[4] [1];
  assign _041_[2] = rd_ptr[0] ? \ram[5] [2] : \ram[4] [2];
  assign _041_[3] = rd_ptr[0] ? \ram[5] [3] : \ram[4] [3];
  assign _042_[0] = rd_ptr[0] ? \ram[7] [0] : \ram[6] [0];
  assign _042_[1] = rd_ptr[0] ? \ram[7] [1] : \ram[6] [1];
  assign _042_[2] = rd_ptr[0] ? \ram[7] [2] : \ram[6] [2];
  assign _042_[3] = rd_ptr[0] ? \ram[7] [3] : \ram[6] [3];
  assign _051_[0] = _043_ ? _011_[0] : \ram[0] [0];
  assign _051_[1] = _043_ ? _011_[1] : \ram[0] [1];
  assign _051_[2] = _043_ ? _011_[2] : \ram[0] [2];
  assign _051_[3] = _043_ ? _011_[3] : \ram[0] [3];
  assign _052_[0] = _044_ ? _011_[0] : \ram[1] [0];
  assign _052_[1] = _044_ ? _011_[1] : \ram[1] [1];
  assign _052_[2] = _044_ ? _011_[2] : \ram[1] [2];
  assign _052_[3] = _044_ ? _011_[3] : \ram[1] [3];
  assign _053_[0] = _045_ ? _011_[0] : \ram[2] [0];
  assign _053_[1] = _045_ ? _011_[1] : \ram[2] [1];
  assign _053_[2] = _045_ ? _011_[2] : \ram[2] [2];
  assign _053_[3] = _045_ ? _011_[3] : \ram[2] [3];
  assign _054_[0] = _046_ ? _011_[0] : \ram[3] [0];
  assign _054_[1] = _046_ ? _011_[1] : \ram[3] [1];
  assign _054_[2] = _046_ ? _011_[2] : \ram[3] [2];
  assign _054_[3] = _046_ ? _011_[3] : \ram[3] [3];
  assign _055_[0] = _047_ ? _011_[0] : \ram[4] [0];
  assign _055_[1] = _047_ ? _011_[1] : \ram[4] [1];
  assign _055_[2] = _047_ ? _011_[2] : \ram[4] [2];
  assign _055_[3] = _047_ ? _011_[3] : \ram[4] [3];
  assign _056_[0] = _048_ ? _011_[0] : \ram[5] [0];
  assign _056_[1] = _048_ ? _011_[1] : \ram[5] [1];
  assign _056_[2] = _048_ ? _011_[2] : \ram[5] [2];
  assign _056_[3] = _048_ ? _011_[3] : \ram[5] [3];
  assign _057_[0] = _049_ ? _011_[0] : \ram[6] [0];
  assign _057_[1] = _049_ ? _011_[1] : \ram[6] [1];
  assign _057_[2] = _049_ ? _011_[2] : \ram[6] [2];
  assign _057_[3] = _049_ ? _011_[3] : \ram[6] [3];
  assign _058_[0] = _050_ ? _011_[0] : \ram[7] [0];
  assign _058_[1] = _050_ ? _011_[1] : \ram[7] [1];
  assign _058_[2] = _050_ ? _011_[2] : \ram[7] [2];
  assign _058_[3] = _050_ ? _011_[3] : \ram[7] [3];
  assign _009_[0] = ~_025_[0];
  assign _009_[1] = ~_025_[1];
  assign _009_[2] = ~_025_[2];
  assign _009_[3] = ~_025_[3];
  assign _010_[0] = ~_000_[0];
  assign _010_[1] = ~_000_[1];
  assign _010_[2] = ~_000_[2];
  assign _010_[3] = ~_000_[3];
  assign _026_ = ~wr_ptr[0];
  assign _027_ = ~wr_ptr[1];
  assign _028_ = ~wr_ptr[2];
  assign _073_ = ~_071_[31];
  assign _069_ = ~_070_;
  assign _068_ = ~_066_[31];
  always @(posedge clk)
      \ram[7] [0] <= _058_[0];
  always @(posedge clk)
      \ram[7] [1] <= _058_[1];
  always @(posedge clk)
      \ram[7] [2] <= _058_[2];
  always @(posedge clk)
      \ram[7] [3] <= _058_[3];
  always @(posedge clk)
      \ram[6] [0] <= _057_[0];
  always @(posedge clk)
      \ram[6] [1] <= _057_[1];
  always @(posedge clk)
      \ram[6] [2] <= _057_[2];
  always @(posedge clk)
      \ram[6] [3] <= _057_[3];
  always @(posedge clk)
      \ram[5] [0] <= _056_[0];
  always @(posedge clk)
      \ram[5] [1] <= _056_[1];
  always @(posedge clk)
      \ram[5] [2] <= _056_[2];
  always @(posedge clk)
      \ram[5] [3] <= _056_[3];
  always @(posedge clk)
      \ram[4] [0] <= _055_[0];
  always @(posedge clk)
      \ram[4] [1] <= _055_[1];
  always @(posedge clk)
      \ram[4] [2] <= _055_[2];
  always @(posedge clk)
      \ram[4] [3] <= _055_[3];
  always @(posedge clk)
      \ram[0] [0] <= _051_[0];
  always @(posedge clk)
      \ram[0] [1] <= _051_[1];
  always @(posedge clk)
      \ram[0] [2] <= _051_[2];
  always @(posedge clk)
      \ram[0] [3] <= _051_[3];
  always @(posedge clk)
      \ram[3] [0] <= _054_[0];
  always @(posedge clk)
      \ram[3] [1] <= _054_[1];
  always @(posedge clk)
      \ram[3] [2] <= _054_[2];
  always @(posedge clk)
      \ram[3] [3] <= _054_[3];
  always @(posedge clk)
      \ram[2] [0] <= _053_[0];
  always @(posedge clk)
      \ram[2] [1] <= _053_[1];
  always @(posedge clk)
      \ram[2] [2] <= _053_[2];
  always @(posedge clk)
      \ram[2] [3] <= _053_[3];
  always @(posedge clk)
      \ram[1] [0] <= _052_[0];
  always @(posedge clk)
      \ram[1] [1] <= _052_[1];
  always @(posedge clk)
      \ram[1] [2] <= _052_[2];
  always @(posedge clk)
      \ram[1] [3] <= _052_[3];
  (* src = "fifo.v:67" *)
  always @(posedge clk or posedge rst)
    if (rst)
      rd_ptr[0] <= 0;
    else
      rd_ptr[0] <= _004_[0];
  (* src = "fifo.v:67" *)
  always @(posedge clk or posedge rst)
    if (rst)
      rd_ptr[1] <= 0;
    else
      rd_ptr[1] <= _004_[1];
  (* src = "fifo.v:67" *)
  always @(posedge clk or posedge rst)
    if (rst)
      rd_ptr[2] <= 0;
    else
      rd_ptr[2] <= _004_[2];
  (* src = "fifo.v:67" *)
  always @(posedge clk or posedge rst)
    if (rst)
      wr_ptr[0] <= 0;
    else
      wr_ptr[0] <= _005_[0];
  (* src = "fifo.v:67" *)
  always @(posedge clk or posedge rst)
    if (rst)
      wr_ptr[1] <= 0;
    else
      wr_ptr[1] <= _005_[1];
  (* src = "fifo.v:67" *)
  always @(posedge clk or posedge rst)
    if (rst)
      wr_ptr[2] <= 0;
    else
      wr_ptr[2] <= _005_[2];
  (* src = "fifo.v:42" *)
  always @(posedge clk or posedge rst)
    if (rst)
      DataOut[0] <= 0;
    else
      DataOut[0] <= _002_[0];
  (* src = "fifo.v:42" *)
  always @(posedge clk or posedge rst)
    if (rst)
      DataOut[1] <= 0;
    else
      DataOut[1] <= _002_[1];
  (* src = "fifo.v:42" *)
  always @(posedge clk or posedge rst)
    if (rst)
      DataOut[2] <= 0;
    else
      DataOut[2] <= _002_[2];
  (* src = "fifo.v:42" *)
  always @(posedge clk or posedge rst)
    if (rst)
      DataOut[3] <= 0;
    else
      DataOut[3] <= _002_[3];
  (* src = "fifo.v:25" *)
  always @(posedge clk or posedge rst)
    if (rst)
      fifo_counter[0] <= 0;
    else
      fifo_counter[0] <= _003_[0];
  (* src = "fifo.v:25" *)
  always @(posedge clk or posedge rst)
    if (rst)
      fifo_counter[1] <= 0;
    else
      fifo_counter[1] <= _003_[1];
  (* src = "fifo.v:25" *)
  always @(posedge clk or posedge rst)
    if (rst)
      fifo_counter[2] <= 0;
    else
      fifo_counter[2] <= _003_[2];
  (* src = "fifo.v:25" *)
  always @(posedge clk or posedge rst)
    if (rst)
      fifo_counter[3] <= 0;
    else
      fifo_counter[3] <= _003_[3];
  assign _006_[1] = fifo_counter[1] ^(* src = "<techmap.v>:263" *)  fifo_counter[0];
  assign _006_[2] = fifo_counter[2] ^(* src = "<techmap.v>:263" *)  _063_[1];
  assign _006_[3] = fifo_counter[3] ^(* src = "<techmap.v>:263" *)  _063_[2];
  assign _075_[1] = fifo_counter[1] ^(* src = "<techmap.v>:262" *)  1'b1;
  assign _062_[1] = _075_[1] ^(* src = "<techmap.v>:263" *)  fifo_counter[0];
  assign _062_[2] = _072_[2] ^(* src = "<techmap.v>:263" *)  _074_[1];
  assign _062_[3] = _067_[3] ^(* src = "<techmap.v>:263" *)  _074_[2];
  assign _007_[0] = wr_ptr[0] ^(* src = "<techmap.v>:262" *)  1'b1;
  assign _007_[1] = wr_ptr[1] ^(* src = "<techmap.v>:263" *)  wr_ptr[0];
  assign _007_[2] = wr_ptr[2] ^(* src = "<techmap.v>:263" *)  _064_[1];
  assign _008_[0] = rd_ptr[0] ^(* src = "<techmap.v>:262" *)  1'b1;
  assign _008_[1] = rd_ptr[1] ^(* src = "<techmap.v>:263" *)  rd_ptr[0];
  assign _008_[2] = rd_ptr[2] ^(* src = "<techmap.v>:263" *)  _065_[1];
  assign _029_[1] = _067_[3] &(* src = "<techmap.v>:260|<techmap.v>:222" *)  _072_[2];
  assign _077_ = _029_[1] &(* src = "<techmap.v>:260|<techmap.v>:221" *)  _066_[1];
  assign _066_[1] = fifo_counter[1] &(* src = "<techmap.v>:260|<techmap.v>:221" *)  _066_[0];
  assign _078_ = fifo_counter[3] |(* src = "<techmap.v>:260|<techmap.v>:221" *)  _031_[1];
  assign _071_[31] = _078_ |(* src = "<techmap.v>:260|<techmap.v>:221" *)  _077_;
  assign _076_ = _031_[1] &(* src = "<techmap.v>:260|<techmap.v>:221" *)  _066_[1];
  assign _066_[0] = fifo_counter[0] |(* src = "<techmap.v>:260|<techmap.v>:212" *)  _006_[0];
  assign _066_[31] = fifo_counter[3] |(* src = "<techmap.v>:260|<techmap.v>:221" *)  _076_;
  assign _063_[1] = fifo_counter[1] &(* src = "<techmap.v>:260|<techmap.v>:221" *)  fifo_counter[0];
  assign _063_[2] = fifo_counter[2] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _063_[1];
  assign _079_ = _075_[1] &(* src = "<techmap.v>:260|<techmap.v>:221" *)  fifo_counter[0];
  assign _080_ = _072_[2] &(* src = "<techmap.v>:260|<techmap.v>:229" *)  _074_[1];
  assign _074_[1] = fifo_counter[1] |(* src = "<techmap.v>:260|<techmap.v>:221" *)  _079_;
  assign _074_[2] = fifo_counter[2] |(* src = "<techmap.v>:260|<techmap.v>:229" *)  _080_;
  assign _064_[1] = wr_ptr[1] &(* src = "<techmap.v>:260|<techmap.v>:221" *)  wr_ptr[0];
  assign _065_[1] = rd_ptr[1] &(* src = "<techmap.v>:260|<techmap.v>:221" *)  rd_ptr[0];
  assign _024_[0] = _001_[3] & _000_[0];
  assign _024_[1] = _001_[3] & _000_[1];
  assign _024_[2] = _001_[3] & _000_[2];
  assign _024_[3] = _001_[3] & _000_[3];
  assign _011_[0] = _024_[0] & _009_[0];
  assign _011_[1] = _024_[1] & _009_[1];
  assign _011_[2] = _024_[2] & _009_[2];
  assign _011_[3] = _024_[3] & _009_[3];
  assign _025_[0] = _001_[3] & _010_[0];
  assign _025_[1] = _001_[3] & _010_[1];
  assign _025_[2] = _001_[3] & _010_[2];
  assign _025_[3] = _001_[3] & _010_[3];
  assign _012_ = _027_ & _028_;
  assign _013_ = _026_ & _012_;
  assign _043_ = _013_ & _001_[3];
  assign _014_ = wr_ptr[0] & _012_;
  assign _044_ = _014_ & _001_[3];
  assign _015_ = wr_ptr[1] & _028_;
  assign _016_ = _026_ & _015_;
  assign _045_ = _016_ & _001_[3];
  assign _017_ = wr_ptr[0] & _015_;
  assign _046_ = _017_ & _001_[3];
  assign _018_ = _027_ & wr_ptr[2];
  assign _019_ = _026_ & _018_;
  assign _047_ = _019_ & _001_[3];
  assign _020_ = wr_ptr[0] & _018_;
  assign _048_ = _020_ & _001_[3];
  assign _021_ = wr_ptr[1] & wr_ptr[2];
  assign _022_ = _026_ & _021_;
  assign _049_ = _022_ & _001_[3];
  assign _023_ = wr_ptr[0] & _021_;
  assign _050_ = _023_ & _001_[3];
  assign _070_ = _068_ | _032_[0];
  assign _006_[0] = fifo_counter[0] ^(* src = "<techmap.v>:262" *)  1'b1;
  assign _072_[2] = fifo_counter[2] ^(* src = "<techmap.v>:262" *)  1'b1;
  assign _067_[3] = fifo_counter[3] ^(* src = "<techmap.v>:262" *)  1'b1;
endmodule
